# [[ BASICS ]] {{
# See cheat sheet: https://gist.github.com/Bekbolatov/6840069e51382965fdad
# `set`: use for setting global options related to tmux
# `set-option`: preferred in config files, usually for individual, sesh/window-specific options
# `-g`: global, meaning all sessions, windows, panes.
# `-ag`: "append global," for keeping prev settings intact
# INFO: the comma says to append to the list of term overrides: "<,terminal_type>:<capabilities>"
# }}

# [[ ASIDE: UNDERSTANDING DEFAULT-TERMINAL ]] {{
# INFO: `default-terminal` is just what "$TERM" is. It determines which terminal "type" tmux assumes it is running in. It tells apps running within tmux what tmux can do; what it's capable of. Important to this is also what it's been ENABLED to do.
# TAKEAWAY: tmux doesn't *natively* advertise or process true color (24-bit RGB color) unless explicitly instructed to do so. Meaning that in tmux's default configuration, it operates with an older color model â€” 256 colors, not 24-bit color.
# In practice, this influences how tmux handles (sends and interprets) color escape codes, italics, bold, true color, etc.
# WHY: for more info on 24-bit (lossless) vs other image formats - https://www.computerhope.com/forum/index.php?topic=20079.0
# For a more in-depth treatment, see https://unix.stackexchange.com/questions/118806/tmux-term-and-256-colours-support?rq=1
# }}


# [[ ADDITIONAL RESOURCES ]] {{
# https://arcolinux.com/everthing-you-need-to-know-about-tmux-configuration/
# https://medium.com/@hammad.ai/how-i-learned-tmux-became-a-workflow-ninja-7d33cc796793
# }}

# [[ ENABLE ESSENTIAL FEATURES ]] {{
# [[ TRUE COLOR SUPPORT ]]
# This approach hardcodes specific env
# set-option -g default-terminal "xterm-256color" # "tmux, use a terminal that supports 24-bit color"
# set-option -ag terminal-overrides ',xterm-256color:RGB' # enables the specific capability (24-bit, true color)

# This approach is more adaptable. Opts taken from: https://github.com/wfxr/dotfiles/blob/master/tmux/tmux.conf
if-shell '[ -n "$TERM" ]' {
    set -g default-terminal "$TERM"
} {
    set-option -g default-terminal "screen-256color"
}

set -ag terminal-overrides ",$TERM:RGB:sitm=\\E\[3m" # italics support
set -as terminal-features ",$TERM:clipboard"
set -ag terminal-features ",*:hyperlinks"

# Set vi-mode
setw -g mode-keys vi

# Add ability to use mouse
set -g mouse on

# os clipboard integration
set-option -g set-clipboard on

# Set prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# Begin indexing windows and panes starting @ 1 instead of 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Forces SHELL env variable to be set to $SHELL
set-option -g default-shell $SHELL

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'Nybkox/tmux-kanagawa'

# Persist tmux sessions after reboot
set -g @plugin 'tmux-plugins/tmux-resurrect'
# Turn on ability to persist sessions across reboots
set -g @resurrect-capture-pane-contents 'on'

#########################
# tmux-resurrect basics #
#########################

# By default the tmux env is saved to a file in ~/.tmux/resurrect dir. Change this with: 
# set -g @resurrect-dir '/some/path'

# There are only 2 situations when you need tmux-resurrect:
#    Save tmux environment just before restarting/shutting down your computer.
#    Restore tmux env after you turn the computer on.

# To use the plugin, only 2 relevant keybinds: 
#    prefix + Ctrl-s - save
#    prefix + Ctrl-r - restore

# See this for persisting nvim / vim sessions: https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md
# See this for restoring other programs: https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_programs.md

# # Automatically save sessions every 15 min
# # Manually save by pressing <leader + Ctrl-s>
# set -g @plugin 'tmux-plugins/tmux-continuum'
# # automatically restore the last saved env on tmux startup
# set -g @continuum-restore 'on'


#########################
#      Status Bar     #
#########################

# Can use a custom colorscheme palette like so:
# source-file ~/.tmux/themes/tmux-kanagawa-dark.conf

# Basic
set -g status on  # or off
set -g status-justify centre
set -g status-position top    # position the status bar at top of screen
set -g status-interval 60               # default update freq = 15 seconds
set -g status-style "fg=#c5c8c6,bg=#282a2e"

# Status Bar Left
set -g status-left-style "fg=#c5c8c6,bg=#373b41"
set -g status-left "#[fg=#1d1f21,bg=#81a2be,bold] #S #[default]"

# Status Bar Right
set -g status-right-style "fg=#c5c8c6,bg=#373b41"
set -g status-right "#[fg=#707880,bg=#282a2e,nobold]#{?client_prefix,#[fg=#cc6666]<P> ,}#{?client_ssh,#[fg=#b5bd68] #h ,}#[fg=#1d1f21,bg=#81a2be,bold] %a %m/%d %I:%M %p #[default]"


# Window Status
setw -g window-status-style "fg=#707880,bg=#282a2e"
setw -g window-status-current-style "fg=#c5c8c6,bg=#373b41,bold"
setw -g window-status-format " #I:#W#F "
setw -g window-status-separator ""
# For yellow asterisk :)
setw -g window-status-current-format "#[fg=#282a2e,bg=#373b41]#[fg=#81a2be] #I:#W#[fg=#f0c674]#F #[fg=#373b41,bg=#282a2e]"

# Window Status Activity
setw -g window-status-activity-style "fg=#f0c674,bg=#282a2e"
setw -g window-status-bell-style "fg=#cc6666,bg=#282a2e"
setw -g monitor-activity on
set -g visual-activity on

# Pane Borders
set -g pane-border-style "fg=#373b41,bg=#1d1f21"
set -g pane-active-border-style "fg=#81a2be,bg=#1d1f21"

# Message and Command Mode
set -g message-style "fg=#c5c8c6,bg=#373b41"
set -g message-command-style "fg=#c5c8c6,bg=#373b41"

# Mode (copy mode) colors
setw -g mode-style "fg=#1d1f21,bg=#81a2be"

# Pane number display colors
set -g display-panes-active-colour "#81a2be"
set -g display-panes-colour "#707880"

# Clock color
setw -g clock-mode-colour "#81a2be"


############
# Keybinds #
############

# rename session
bind . command-prompt -I "#S" "rename-session '%%'"

# Horizontal/vertical pane creation
unbind '"'
unbind %

# bind v split-window -h
# bind h split-window -v

# Open panes in cwd
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
# bind H split-window -h 'cd "$(pwd)" && $SHELL'
# bind V split-window -v 'cd "$(pwd)" && $SHELL'

# Change default work dir
bind W attach -c '#{pane_current_path}'

# Copy stuff
unbind [ # was changing layouts, never used it though
bind-key Space copy-mode

# OLD:
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
# # bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy && wl-paste -n | wl-copy -p"
# bind-key p run "wl-paste -n | tmux load-buffer - ; tmux paste-buffer"

# NEW
bind -T copy-mode-vi v      send -X begin-selection
bind -T copy-mode-vi C-v    send -X rectangle-toggle
bind -T copy-mode-vi y      send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi L      send -X end-of-line
bind -T copy-mode-vi H      send -X start-of-line

# Toggle status bar
unbind t  # was time
bind t set-option -g status

# Reload config
unbind R
bind R source-file ~/.dotfiles/.config/tmux/tmux.conf \; display "Config reloaded!"

# Resize panes
# set -g repeat-time 500
# bind -r H resize-pane -L 4
# bind -r L resize-pane -R 4
# bind -r J resize-pane -D 4
# bind -r K resize-pane -U 4

# Resize panes using Ctrl + Arrow keys
bind -n C-Up resize-pane -U 4
bind -n C-Down resize-pane -D 4
bind -n C-Left resize-pane -L 4
bind -n C-Right resize-pane -R 4

# Swap windows
bind-key -n S-Left swap-window -d -t -1
bind-key -n S-Right swap-window -d -t +1


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
